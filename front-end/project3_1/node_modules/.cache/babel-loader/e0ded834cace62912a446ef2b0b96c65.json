{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\personal\\\\scoala\\\\front-programming\\\\final_project\\\\front-end\\\\project3_1\\\\src\\\\components\\\\Provinces.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Provinces = () => {\n  _s();\n\n  const [provinces, setProvinces] = useState(['Alberta', 'Colombie-Britannique', 'Ile- du-Prince-Édouard', 'Manitoba', 'Nouveau-Brunswick', 'Nouvelle- Écosse', 'Ontario', 'Québec', 'Saskatchewan', 'Terre-Neuve-et-La- brador', 'Nunavut', 'Territoires du Nord\\'Ouest', 'Yukon']);\n  const [strFilter, setFilter] = useState('');\n  const [binTrouve, setBinTrouve] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.provinces.map(currProvince => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: currProvince\n        }, currProvince, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Provinces, \"dNI9wIFrbiZ+tQjNeiqPRrO3ViM=\");\n\n_c = Provinces;\nexport default Provinces;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provinces\");","map":{"version":3,"names":["React","useState","Provinces","provinces","setProvinces","strFilter","setFilter","binTrouve","setBinTrouve","state","map","currProvince"],"sources":["C:/Users/alexa/Documents/personal/scoala/front-programming/final_project/front-end/project3_1/src/components/Provinces.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Provinces = () => {\r\n\r\n    const [provinces, setProvinces] = useState(\r\n        ['Alberta', 'Colombie-Britannique', 'Ile- du-Prince-Édouard', 'Manitoba', 'Nouveau-Brunswick', 'Nouvelle- Écosse', 'Ontario', 'Québec', 'Saskatchewan', 'Terre-Neuve-et-La- brador', 'Nunavut', 'Territoires du Nord\\'Ouest', 'Yukon']\r\n        );\r\n    const [strFilter, setFilter] = useState('');\r\n    const [binTrouve, setBinTrouve] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {this.state.provinces.map(currProvince => { return (\r\n                <li key={currProvince}>\r\n                    {currProvince}\r\n                </li>\r\n                );\r\n            })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Provinces;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CACtC,CAAC,SAAD,EAAY,sBAAZ,EAAoC,wBAApC,EAA8D,UAA9D,EAA0E,mBAA1E,EAA+F,kBAA/F,EAAmH,SAAnH,EAA8H,QAA9H,EAAwI,cAAxI,EAAwJ,2BAAxJ,EAAqL,SAArL,EAAgM,4BAAhM,EAA8N,OAA9N,CADsC,CAA1C;EAGA,MAAM,CAACI,SAAD,EAAYC,SAAZ,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EAEA,oBACI;IAAA,uBACI;MAAA,UACK,KAAKQ,KAAL,CAAWN,SAAX,CAAqBO,GAArB,CAAyBC,YAAY,IAAI;QAAE,oBAC5C;UAAA,UACKA;QADL,GAASA,YAAT;UAAA;UAAA;UAAA;QAAA,QAD4C;MAK/C,CALI;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CApBD;;GAAMT,S;;KAAAA,S;AAsBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}