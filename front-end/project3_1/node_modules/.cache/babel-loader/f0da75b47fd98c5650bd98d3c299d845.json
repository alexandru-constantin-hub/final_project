{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\personal\\\\scoala\\\\front-programming\\\\final_project\\\\front-end\\\\project3_1\\\\src\\\\components\\\\RegionsDrop.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RegionsDrop() {\n  _s();\n\n  const [regions, setRegions] = useState(null);\n  const [strFilter, setFilter] = useState('');\n  const [binTrouve, setBinTrouve] = useState(false);\n  const baseUrl = 'http://localhost:3050/regions';\n  useEffect(() => {\n    getAllRegions();\n  }, []);\n\n  const getAllRegions = () => {\n    axios.get(baseUrl).then(response => {\n      setRegions(response.data.regions);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const dropDownChange = event => {\n    setFilter(event.target.value);\n    console.log(event.target.value);\n  };\n\n  let binRegionsFound = regions ? regions.some(region => region.toUpperCase().includes(strFilter.toUpperCase())) : false;\n  if (!regions) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Regions avec le liste avec dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"RSelecte le province sur la liste:\\xA0\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control mb-4\",\n      onChange: dropDownChange,\n      children: regions.map(region => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Liste des provinces conte- nant les lettres: \", strFilter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [regions.map(region => {\n        return region.toUpperCase().includes(strFilter.toUpperCase()) && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this);\n      }), !binRegionsFound && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \" No states found \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegionsDrop, \"+1yR+ivoaYVSBScw+w1T2zP9oXw=\");\n\n_c = RegionsDrop;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionsDrop\");","map":{"version":3,"names":["React","useState","useEffect","axios","RegionsDrop","regions","setRegions","strFilter","setFilter","binTrouve","setBinTrouve","baseUrl","getAllRegions","get","then","response","data","catch","error","console","log","dropDownChange","event","target","value","binRegionsFound","some","region","toUpperCase","includes","map"],"sources":["C:/Users/alexa/Documents/personal/scoala/front-programming/final_project/front-end/project3_1/src/components/RegionsDrop.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function  RegionsDrop() {\r\n    \r\n\r\n    const [regions, setRegions] = useState(null);\r\n    const [strFilter, setFilter] = useState('');\r\n    const [binTrouve, setBinTrouve] = useState(false);\r\n    \r\n    const baseUrl = 'http://localhost:3050/regions';\r\n\r\n     useEffect(() => {\r\n         getAllRegions();\r\n     },[]);\r\n\r\n     const getAllRegions = () => {\r\n         axios.get(baseUrl)\r\n            .then(response => {\r\n                 setRegions(response.data.regions);\r\n             })\r\n             .catch(error => {\r\n                 console.log(error);\r\n             });\r\n    }\r\n\r\n  \r\n    const dropDownChange = (event) => {\r\n        setFilter(event.target.value);\r\n        console.log(event.target.value)\r\n    }\r\n\r\n \r\n    let binRegionsFound = regions ? regions.some( region=>region\r\n        .toUpperCase()\r\n        .includes(strFilter.toUpperCase())\r\n        ) : false;\r\n\r\n        \r\n    if(!regions) return null\r\n\r\n    return (\r\n        <>\r\n        <h1>Regions avec le liste avec dropdown</h1>\r\n        <span>RSelecte le province sur la liste:&nbsp;&nbsp;</span>\r\n        <select className=\"form-control mb-4\" onChange={dropDownChange}>\r\n            {regions.map(region => {\r\n                return (\r\n                    <option key={region}>{region}</option>\r\n                )\r\n            })}\r\n        </select>\r\n       \r\n        <div>Liste des provinces conte- nant les lettres: {strFilter}</div>\r\n                <ul className=\"list-group\">\r\n                    {regions.map(region => {\r\n                        return (\r\n                            region.toUpperCase().includes(strFilter.toUpperCase()) && (\r\n                                <li key={region} className=\"list-group-item\">{region}</li>\r\n                            )\r\n                            \r\n                        ) \r\n                    })}\r\n                    {!binRegionsFound && <li> No states found </li>}\r\n                </ul>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAAUC,WAAV,GAAwB;EAAA;;EAGnC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,SAAD,EAAYC,SAAZ,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMU,OAAO,GAAG,+BAAhB;EAECT,SAAS,CAAC,MAAM;IACZU,aAAa;EAChB,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,aAAa,GAAG,MAAM;IACxBT,KAAK,CAACU,GAAN,CAAUF,OAAV,EACIG,IADJ,CACSC,QAAQ,IAAI;MACbT,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcX,OAAf,CAAV;IACH,CAHL,EAIKY,KAJL,CAIWC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CANL;EAOJ,CARA;;EAWD,MAAMG,cAAc,GAAIC,KAAD,IAAW;IAC9Bd,SAAS,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;IACAL,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;EACH,CAHD;;EAMA,IAAIC,eAAe,GAAGpB,OAAO,GAAGA,OAAO,CAACqB,IAAR,CAAcC,MAAM,IAAEA,MAAM,CACvDC,WADiD,GAEjDC,QAFiD,CAExCtB,SAAS,CAACqB,WAAV,EAFwC,CAAtB,CAAH,GAGrB,KAHR;EAMA,IAAG,CAACvB,OAAJ,EAAa,OAAO,IAAP;EAEb,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAQ,SAAS,EAAC,mBAAlB;MAAsC,QAAQ,EAAEgB,cAAhD;MAAA,UACKhB,OAAO,CAACyB,GAAR,CAAYH,MAAM,IAAI;QACnB,oBACI;UAAA,UAAsBA;QAAtB,GAAaA,MAAb;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJA;IADL;MAAA;MAAA;MAAA;IAAA,QAHA,eAWA;MAAA,4DAAmDpB,SAAnD;IAAA;MAAA;MAAA;MAAA;IAAA,QAXA,eAYQ;MAAI,SAAS,EAAC,YAAd;MAAA,WACKF,OAAO,CAACyB,GAAR,CAAYH,MAAM,IAAI;QACnB,OACIA,MAAM,CAACC,WAAP,GAAqBC,QAArB,CAA8BtB,SAAS,CAACqB,WAAV,EAA9B,kBACI;UAAiB,SAAS,EAAC,iBAA3B;UAAA,UAA8CD;QAA9C,GAASA,MAAT;UAAA;UAAA;UAAA;QAAA,QAFR;MAMH,CAPA,CADL,EASK,CAACF,eAAD,iBAAoB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAZR;EAAA,gBADJ;AA2BH;;GAjEwBrB,W;;KAAAA,W;AAiExB"},"metadata":{},"sourceType":"module"}